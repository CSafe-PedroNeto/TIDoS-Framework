#!/usr/bin/env python
# coding: utf-8

#-:-:-:-:-:-:-:-:-:-:-:-:#
#    TIDoS Framework     #
#-:-:-:-:-:-:-:-:-:-:-:-:#

#This module requires TIDoS Framework
#https://github.com/theInfectedDrake/TIDoS-Framework

import requests
import time
import re
import socket
import http.cookiejar
import urllib
from re import search
from core.Core.colors import *
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def cloud0x00(web):

    web = web.replace('https://','')
    web = web.replace('http://','')
    print(R+'\n   =========================================')
    print(R+'    C L O U D F L A R E   M I S C O N F I G.')
    print(R+'   =========================================\n')
    time.sleep(0.4)
    print(GR+' [*] Checking server status...')
    try:
        ip_addr = socket.gethostbyname(web)
        print(G+' [+] Server detected online...')
        time.sleep(0.5)
        print(G+' [+] Server IP :> '+O+ip_addr)
    except:
        print(R+' [-] Server seems down...')

    print(GR+' [*] Trying to identify backend...')
    time.sleep(0.4)
    web = 'http://' + web
    try:
        print(GR+' [*] Making the no-verify request...')
        time.sleep(0.6)
        r = requests.get(web, verify=False)
        header = r.headers['Server']
        if 'cloudflare' in header:
            print(O+' [+] The website is behind '+R+'Cloudflare.')
            print(G+' [+] Server : Cloudflare')
            time.sleep(0.4)
            m = input(O+' [+] Do you want TIDoS to try and bypass Cloudflare? (y/n) :> ')
            if m == 'y' or m == 'Y':
                bypass(web)
            elif m == 'n' or m == 'N':
                pass
            else:
                print(R+' [-] Invalid choice...')
                serverdetect(web)
            try:
                ip_addr = bypass.ip_addr
            except:
                pass
        else:
            print(R+' [-] Website does not seem to be a part of Cloudflare Network...')
    except ImportError:
        print(R+' [-] Failed to identify server.\n [-] Some error occured!')
        pass

def bypass(domain):

    print(GR+' [*] Trying to get real IP...')
    posta = urllib.parse.urlencode({'cfS': domain})
    result = requests.post('http://www.crimeflare.info/cgi-bin/cfsearch.cgi', data=posta).text

    match = search(r' \b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b', result)
    if match:
        bypass.ip_addr = match.group().split(' ')[1][:-1]
        print(G+' [+] Cloudflare found misconfigured!')
        time.sleep(0.4)
        print(GR+' [*] Identifying IP...')
        time.sleep(0.5)
        print(G+' [+] Real IP Address : ' +O+ bypass.ip_addr)
        time.sleep(0.4)
        print(O+' [!] Geolocating IP Address...\n')
        rq = requests.get('http://api.hackertarget.com/geoip/?q='+bypass.ip_addr).text
        if 'error' not in result and 'invalid' not in result:
            res = rq.splitlines()
            for r in res:
                print(G+' [+] ' + r.split(':')[0].strip() + ' : ' +O+ r.split(':')[1].strip())
                time.sleep(0.1)
        print('\n')
    else:
        print(R+' [-] Cloudflare properly configured...')
        print(R+' [-] Unable to find remote IP!\n')
        pass

def cloudflaremisc(web):

    print(GR+' [*] Loading...')
    time.sleep(0.5)
    cloud0x00(web)
    
